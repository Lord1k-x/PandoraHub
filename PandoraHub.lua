--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.5b) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then local v63=0;while true do if (v63==0) then v18=v0(v3(v29,1,1));return "";end end else local v64=v2(v0(v29,16));if v18 then local v69=0;local v70;while true do if (v69==0) then v70=v5(v64,v18);v18=nil;v69=1;end if (v69==1) then return v70;end end else return v64;end end end);local function v19(v30,v31,v32)if v32 then local v65=0 + (543 -(137 + 406));local v66;while true do if (v65==(305 -(182 + 123))) then v66=(v30/(2^(v31-1)))%((378 -(202 + 174))^(((v32-(1 + 0 + 0)) -(v31-1)) + (2 -1)));return v66-(v66%(1 + 0 + 0));end end else local v67=556 -(112 + 444);local v68;while true do if (v67==(0 + 0)) then v68=(3 -1)^(v31-(1 + 0));return (((v30%(v68 + v68))>=v68) and (374 -(341 + 32))) or 0;end end end end local function v20()local v37=0 + 0;local v38;while true do if (v37==(173 -(161 + 12))) then v38=v1(v15,v17,v17);v17=v17 + (4 -3);v37=1 -(0 + 0);end if (v37==(1 + 0)) then return v38;end end end local function v21()local v39,v40=v1(v15,v17,v17 + 2 + 0);v17=v17 + 1 + 1;return (v40 * (1 + 255)) + v39;end local function v22()local v41,v42,v43,v44=v1(v15,v17,v17 + (6 -3));v17=v17 + (18 -14);return (v44 * (7370548 + 9406668)) + (v43 * (33348 + 32188)) + (v42 * 256) + v41;end local function v23()local v45=v22();local v46=v22();return (( -(272 -(45 + (364 -(49 + 90)))) * v19(v46,124 -92)) + 1 + 0) * ((2 -0)^(v19(v46,(571 -(10 + 505)) -35,324 -(47 + (495 -(35 + 214)))) -1023)) * ((((v19(v46,1 + 0,2 + 18) * (((3443 -2008) -(495 + 938))^(145 -(1886 -(1216 + 557))))) + v45)/((5 -3)^(46 + 6))) + 1 + (1815 -(344 + 1471)));end local function v24(v33)local v47;if  not v33 then v33=v22();if (v33==(1393 -(1229 + 164))) then return "";end end v47=v3(v15,v17,(v17 + v33) -(2 -1));v17=v17 + v33;local v48={};for v60=1, #v47 do v48[v60]=v2(v1(v3(v47,v60,v60)));end return v6(v48);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v49=0;local v50;local v51;local v52;local v53;local v54;local v55;while true do local v62=1912 -(738 + 1174);while true do if (v62==0) then if (v49==1) then v53={v50,v51,nil,v52};v54=v22();v55={};v49=2;end if (v49~=2) then else for v78=1,v54 do local v79=0 -0;local v80;local v81;local v82;local v83;while true do if (v79==(4 -2)) then while true do if (v80~=(449 -(33 + 415))) then else v83=nil;while true do if (v81==0) then local v119=0;local v120;local v121;while true do if (v119==(978 -(597 + 380))) then while true do if (v120==0) then v121=0;while true do if ((0 -0)==v121) then v82=v20();v83=nil;v121=1 -0;end if ((1 + 0)==v121) then v81=1;break;end end break;end end break;end if ((0 + 0)~=v119) then else v120=0;v121=nil;v119=1;end end end if (v81==(1 + 0)) then if (v82==1) then v83=v20()~=0;elseif (v82==(942 -(294 + 646))) then v83=v23();elseif (v82~=(3 + 0)) then else v83=v24();end v55[v78]=v83;break;end end break;end if (v80~=(0 -0)) then else v81=0 + 0;v82=nil;v80=1 + 0;end end break;end if (v79==0) then v80=0 + 0;v81=nil;v79=1 + 0;end if (v79~=(1 -0)) then else v82=nil;v83=nil;v79=6 -4;end end end v53[3 + 0]=v20();for v84=1112 -(416 + 695),v22() do local v85=0 -0;local v86;local v87;while true do if (v85~=1) then else while true do if (v86==0) then v87=v20();if (v19(v87,3 -2,1)==0) then local v113=0 -0;local v114;local v115;local v116;local v117;local v118;while true do if ((4 -3)==v113) then v116=nil;v117=nil;v113=2;end if ((950 -(435 + 513))==v113) then v118=nil;while true do if (v114==1) then local v125=0;while true do if (v125==1) then v114=2;break;end if (v125~=0) then else v117=nil;v118=nil;v125=1;end end end if (v114~=(6 -4)) then else while true do if (v115==(7 -5)) then local v127=0 + 0;local v128;while true do if (v127~=0) then else v128=1670 -(848 + 822);while true do if (v128==(1 + 0)) then v115=3;break;end if (v128~=0) then else if (v19(v117,1,1)~=1) then else v118[1 + 1]=v55[v118[2]];end if (v19(v117,2,403 -(310 + 91))==(1 -0)) then v118[653 -(180 + 470)]=v55[v118[220 -(6 + 211)]];end v128=1 -0;end end break;end end end if ((1 + 0)~=v115) then else v118={v21(),v21(),nil,nil};if (v116==0) then local v147=0;local v148;local v149;while true do if (v147~=(1 + 0)) then else while true do if (v148~=0) then else v149=0;while true do if (v149~=(0 -0)) then else v118[3]=v21();v118[4]=v21();break;end end break;end end break;end if (v147~=(707 -(567 + 140))) then else local v179=0;while true do if (0==v179) then v148=0 + 0;v149=nil;v179=1 -0;end if (v179~=1) then else v147=76 -(36 + 39);break;end end end end elseif (v116==(1 + 0)) then v118[3]=v22();elseif (v116==(3 -1)) then v118[3]=v22() -((1 + 1)^(12 + 4));elseif (v116==(5 -2)) then local v189=1388 -(530 + 858);local v190;while true do if (v189~=(0 -0)) then else v190=350 -(139 + 211);while true do if (0==v190) then v118[3]=v22() -(2^(72 -56));v118[816 -(536 + 276)]=v21();break;end end break;end end end v115=2;end if ((10 -7)~=v115) then else if (v19(v117,524 -(487 + 34),4 -1)~=(4 -3)) then else v118[4]=v55[v118[4]];end v50[v84]=v118;break;end if (v115==(1243 -(523 + 720))) then local v130=0 -0;while true do if (v130~=0) then else v116=v19(v87,2,3);v117=v19(v87,10 -6,14 -8);v130=1;end if (v130==1) then v115=1 -0;break;end end end end break;end if (v114==0) then local v126=0 -0;while true do if (v126~=1) then else v114=1 + 0;break;end if (v126==(0 -0)) then v115=0 + 0;v116=nil;v126=1;end end end end break;end if (v113==0) then v114=0 -0;v115=nil;v113=1;end end end break;end end break;end if ((696 -(351 + 345))==v85) then local v105=0;local v106;while true do if (v105~=(0 + 0)) then else v106=0;while true do if (1~=v106) then else v85=1;break;end if (v106~=0) then else local v123=0;while true do if (v123~=(1 + 0)) then else v106=1892 -(45 + 1846);break;end if ((1789 -(954 + 835))~=v123) then else v86=0;v87=nil;v123=1;end end end end break;end end end end end v49=3;end v62=1 + 0;end if (v62==(1 -0)) then if (v49==0) then v50={};v51={};v52={};v49=1;end if (v49~=3) then else local v77=0;while true do if (v77==(2 -1)) then return v53;end if (v77~=0) then else for v107=1,v22() do v51[v107-(2 -1)]=v27();end for v109=1,v22() do v52[v109]=v22();end v77=1;end end end break;end end end end local function v28(v34,v35,v36)local v56=0;local v57;local v58;local v59;while true do if (v56==0) then v57=v34[1];v58=v34[2];v56=1;end if (v56==1) then v59=v34[3];return function(...)local v71=1;local v72= -1;local v73={...};local v74=v11("#",...) -1;local function v75()local v88=v57;local v89=Const;local v90=v58;local v91=v59;local v92=v26;local v93={};local v94={};local v95={};for v101=0 + 0,v74 do if ((4580>=(574 + 3016)) and (v101>=v91)) then v93[v101-v91]=v73[v101 + ((1408 -(111 + 492)) -(19 + 785))];else v95[v101]=v73[v101 + 1];end end local v96=(v74-v91) + 1 + (0 -0);local v97;local v98;while true do local v102=0;local v103;local v104;while true do if ((2008<=(15845 -(4017 + 7539))) and ((0 + 0)==v102)) then v103=1775 -(173 + 1602);v104=nil;v102=1 + 0;end if ((v102==(2 -1)) or ((4439 -(355 + 1141))>(4452 -(269 + 1159)))) then while true do if (((9061 -4809)<=4361) and (v103==(0 + 0))) then v104=277 -(214 + 63);while true do if ((v104==(2 -1)) or ((1606 -(676 + 211))>(1360 -401))) then if ((v98<=(192 -((1698 -(941 + 643)) + 67))) or ((954 + 3753)<(50 + 354))) then if ((3365<3987) and (v98<=5)) then if ((v98<=2) or ((2856 + 1969)==(135 + (2342 -(1397 + 242))))) then if ((v98<=(0 + 0)) or ((1803 + 18)>=4839)) then local v131=0 + 0;local v132;local v133;while true do if ((4762>=(2971 -(224 + 714))) and ((0 -0)==v131)) then v132=0 + 0;v133=nil;v131=2 -1;end if (((1066 -(5 + 42))==1019) and (v131==(853 -(737 + 115)))) then while true do if (((2161 + 2238)==4399) and (0==v132)) then v133=v97[5 -3];v95[v133]=v95[v133](v95[v133 + 1]);break;end end break;end end elseif (((661 + 1139)<=((1459 -(11 + 1139)) + 2461)) and (v98>(358 -((1177 -(706 + 292)) + 178)))) then v95[v97[716 -(144 + 570)]]=v95[v97[(1599 -(1267 + 331)) + 2]][v97[3 + 1]];else v95[v97[1703 -(460 + 1241)]]=v95[v97[3]];end elseif ((3823>(3215 -(252 + 159))) and (v98<=(1 + 2))) then v95[v97[2 + 0]]=v28(v90[v97[5 -2]],nil,v36);elseif (((2069 -(595 + 1118))==((3991 -2593) -1042)) and (v98>((5 -3) + (2 -0)))) then local v153=0 -(0 + 0);local v154;local v155;local v156;while true do if (((1101 + 2343)<=(6565 -2303)) and (v153==(1619 -(452 + 1167)))) then v154=0;v155=nil;v153=542 -(433 + 108);end if (((11603 -7188)==(3485 + 930)) and (v153==1)) then v156=nil;while true do if ((2479>=1801) and ((1 + 0)==v154)) then while true do if (((1690 -(889 + 801))==v155) or ((3660 -1491)<=(310 + 24))) then v156=v97[2];v95[v156]=v95[v156]();break;end end break;end if ((v154==0) or (4408<(1076 + 629))) then local v194=0;while true do if ((v194==(1208 -(963 + 245))) or ((6066 -2134)<(9055 -7032))) then v155=538 -((924 -422) + 36);v156=nil;v194=1 + 0;end if ((v194==1) or (2129>=(1895 + 1053))) then v154=758 -(10 + 747);break;end end end end break;end end else local v157=916 -(316 + 600);local v158;local v159;while true do if ((v157==(1 -0)) or ((4955 -(452 + 874))<((714 -433) -153))) then while true do if (((2394 -1860)<(6684 -3814)) and (v158==(0 -0))) then v159=v97[1 + 1];v95[v159]=v95[v159](v12(v95,v159 + (1125 -(370 + 38 + 716)),v72));break;end end break;end if ((((5733 + 4464) -8057)==((4990 -(166 + 1169)) -1515)) and (v157==(0 -0))) then v158=375 -(138 + 237);v159=nil;v157=1;end end end elseif ((v98<=(2 + 6)) or ((1397 + 2561)==1563)) then if ((v98<=(2 + 4)) or ((4540 -2520)>(520 + 4008 + 2 + 1))) then local v135=0;local v136;local v137;local v138;while true do if ((v135==(128 -(111 + 17))) or ((4399 -2298)==(1712 -(6 + (1917 -(1391 + 480)))))) then v136=513 -(425 + 88);v137=nil;v135=1;end if (((2 -1)==v135) or (((4897 -(562 + 437)) -(177 + 507))<(317 + 211))) then v138=nil;while true do if (((1201 + 1617)>(2832 -(327 + 162))) and (v136==0)) then v137=0 + 0;v138=nil;v136=103 -(74 + 28);end if (((669 -394)<(1162 -(360 + 379))) and (v136==1)) then while true do if ((v137==(1148 -(663 + 485))) or ((752 + 169 + 159)<(2605 -(1507 + 66)))) then v138=v97[949 -(27 + 920)];v95[v138](v12(v95,v138 + (1948 -(1721 + 226)),v97[2 + 1]));break;end end break;end end break;end end elseif ((v98==(1350 -(931 + 412))) or ((5562 -3685)>4620)) then v95[v97[1 + 1]]=v97[3]~=(0 -0);elseif ((4858>((5164 -4092) -(203 + 48))) and (v95[v97[199 -(150 + 47)]]==v97[1 + 3])) then v71=v71 + 1;else v71=v97[3];end elseif ((v98<=(7 + 2)) or (1247<=1030)) then local v139=0 + 0;while true do if ((((1193 -(194 + 855)) + 2545)>(163 + 38)) and (v139==0)) then v95[v97[5 -3]]=v97[1596 -(1183 + 410)]~=(0 -0);v71=v71 + 1;break;end end elseif ((v98==(39 -29)) or ((937 + 341 + 640)==(2835 -(42 + 315)))) then v95[v97[9 -7]]=v97[3];else local v162=0 + (0 -0);local v163;local v164;while true do if (((2220 -(77 + 35))==((2113 -(50 + 17)) + 62)) and (v162==(266 -(148 + 118)))) then local v181=0 + 0;while true do if ((3218==3218) and (v181==(178 -(45 + 132)))) then v162=1773 -(609 + 1163);break;end if (((0 -0)==v181) or ((3134 -(287 + 985))==(4846 -(234 + 237)))) then v163=0;v164=nil;v181=1787 -(832 + 954);end end end if (((6518 -(5467 -(1220 + 679)))>(3935 -(281 + 1269))) and (1==v162)) then while true do if ((v163==(700 -(46 + 654))) or (((13370 -10240) + 58)<(8460 -(1900 + 3394)))) then v164=v97[1 + 1];v95[v164](v95[v164 + 1 + 0]);break;end end break;end end end elseif (((2548 -(659 + 1297))<=(4546 -(426 + 1110))) and (v98<=(1333 -(1217 + 99)))) then if (((2785 + 1126)>=2489) and (v98<=(2 + 12))) then if ((v98<=(6 + 6)) or ((2437 + 1629)==(2658 + 334))) then v71=v97[10 -7];elseif (((2750 -(1313 + 585))<(5919 -(1237 + 730))) and (v98>(13 + 0))) then do return;end elseif (((19562 -15451)>(6570 -2959)) and (v95[v97[2]]~=v95[v97[4 + 0]])) then v71=v71 + (1582 -(171 + 1410));else v71=v97[3];end elseif ((((3800 -(837 + 392)) -(991 + 533))<3108) and (v98<=(4 + 11))) then local v140=0 + 0 + 0;local v141;local v142;local v143;local v144;local v145;while true do if (((2279 + 1922)<=(5420 -(530 + 165))) and (v140==(0 + 0))) then v141=0 + 0;v142=nil;v140=(6364 -4449) -(226 + 1688);end if ((515<((241 + 3656) -(49 + 62))) and (v140==(1776 -(1363 + 412)))) then v143=nil;v144=nil;v140=3 -1;end if ((v140==(681 -(35 + 644))) or ((2262 -(223 + 1105))==(3298 -2363))) then v145=nil;while true do if ((3204<4006) and (v141==(3 -2))) then local v184=1897 -(1852 + 45);local v185;while true do if (((847 + 245)<=(4909 -(14 + 1))) and (v184==(0 + 0))) then v185=22 -(9 + 13);while true do if (((1322 -(570 + 751))==v185) or ((2076 + 585)==(560 -410))) then v141=2;break;end if (((0 -0)==v185) or ((4426 -1227)<(1630 -(605 + 806)))) then local v205=0 -0;while true do if ((v205==(1314 -(936 + 377))) or (4849<=(4394 -(334 + 567)))) then v185=2 -1;break;end if (((2909 -(11 + 730))<=(8658 -4567)) and (v205==(1137 -(672 + 51 + 414)))) then v72=(v144 + v142) -(2 -1);v145=0 + 0;v205=1 + 0;end end end end break;end end end if (((4465 -(863 + 204))==3398) and (v141==0)) then local v186=1038 -(600 + 438);while true do if ((0==v186) or (((11548 -7122) -(1606 + 42 + 45))<=(2717 -(206 + 1223)))) then local v201=1436 -(344 + 1092);while true do if (((27 + 130)==(91 + 66)) and (v201==(1 + 0))) then v186=1;break;end if (((2630 -(302 + 1438))<=2856) and (0==v201)) then v142=v97[6 -4];v143,v144=v92(v95[v142](v12(v95,v142 + (2 -1),v97[(785 + 412) -(1190 + 4)])));v201=1 + 0;end end end if ((2595>(492 + 304)) and (v186==((2 + 0) -1))) then v141=1;break;end end end if ((v141==(1 + 1)) or (4599<(3754 -(590 + 408)))) then for v191=v142,v72 do local v192=0 + 0 + 0;local v193;while true do if ((v192==0) or (1200==(3764 -2919))) then v193=0 + 0;while true do if ((v193==(1236 -(1112 + 124))) or ((3232 + 423)<=(848 + 64))) then v145=v145 + (2 -(1 -0));v95[v191]=v143[v145];break;end end break;end end end break;end end break;end end elseif ((v98>16) or (4905<(4829 -((688 -317) + 398)))) then for v177=v97[2 -0],v97[1 + (5 -3)] do v95[v177]=nil;end else v95[v97[2]][v97[3 + 0]]=v97[12 -(2 + 6)];end elseif (((5090 -(8422 -5245))<=(10080 -5890)) and (v98<=20)) then if ((v98<=(6 + 12)) or ((2791 -(37 + (1244 -(428 + 802))))<=(2538 -((1925 -(456 + 893)) + 450)))) then v95[v97[4 -2]]={};elseif (((4147 -(1373 + 196))==2578) and (v98==(62 -43))) then v95[v97[814 -(182 + 630)]]=v36[v97[4 -1]];else v95[v97[705 -(688 + 15)]][v97[1630 -(779 + 848)]]=v95[v97[2 + 2]];end elseif ((v98<=(46 -24)) or ((2224 -959)>(1362 + (4051 -2421)))) then if (((1005 + 3428)==(519 + 3914)) and (v98>(10 + 11))) then if (((19 + 26)<1459) and (v97[2]==v95[v97[3 + 1]])) then v71=v71 + 1 + 0;else v71=v97[1857 -(248 + 1606)];end else local v168=0;local v169;local v170;while true do if (((5866 -3510)<4904) and (v168==(473 -(469 + 4)))) then v169=534 -(474 + 60);v170=nil;v168=1;end if ((((13176 -8075) -2766)>=(3441 -(1398 + 59))) and ((1 + 0)==v168)) then while true do if ((v169==0) or (((680 -(12 + 320)) + 964)>(4032 -(3513 -(769 + 165))))) then v170=v97[7 -5];v95[v170]=v95[v170](v12(v95,v170 + 1 + 0,v97[(1811 -(1443 + 367)) + 2]));break;end end break;end end end elseif ((v98>(63 -40)) or ((2952 -(8880 -6541))>(3841 -2107))) then v95[v97[2]]();else local v171=1257 -(1109 + 148);local v172;local v173;local v174;while true do if ((v171==((597 -(32 + 562)) -2)) or ((1801 -(380 + 728))==(2556 -((1861 -1347) + (1600 -(226 + 1062)))))) then v174=nil;while true do if ((v172==1) or ((1682 -(160 + (1181 -(110 + 761))))>=((996 -(71 + 454)) + 2561))) then v95[v173 + 1 + 0]=v174;v95[v173]=v174[v97[1315 -(555 + 756)]];break;end if ((v172==(0 -0)) or ((5802 -4251)>(8361 -4273))) then local v199=0 -0;local v200;while true do if ((v199==((0 -0) + 0)) or (((299 + 213) -(36 + 171))==(1374 + (3837 -(1729 + 209))))) then v200=(3399 -2061) -(399 + 939);while true do if ((v200==(1 + 0)) or ((8967 -(32570 -25847))==3251)) then v172=2 -1;break;end if (((1986 -620)<((4365 + 1772) -3481)) and (v200==(0 + 0))) then local v209=0 + 0;while true do if ((v209==(0 -0)) or ((2762 -(54 + 1044))>2809)) then v173=v97[4 -2];v174=v95[v97[3]];v209=1 + (469 -(285 + 184));end if ((v209==(3 -2)) or ((2578 -(8 + 25))>3935)) then v200=1 + 0;break;end end end end break;end end end end break;end if (((4268 -1621)>=((13182 -10276) -(175 + 1729))) and (v171==(1687 -(533 + 1154)))) then local v182=0;while true do if (((2987 + 1584)>=(11260 -8104)) and (v182==(1 -0))) then v171=1;break;end if ((v182==(0 + 0)) or ((4123 + 470)<(2219 -(21 + 15 + (279 -(43 + 214)))))) then v172=0;v173=nil;v182=896 -(523 + 372);end end end end end v71=v71 + (1391 -(505 + 885));break;end if (((2491 + 40)>=(1767 -(694 + 884))) and ((437 -(289 + 148))==v104)) then local v124=0 + 0;while true do if ((v124==(863 -(681 + 182))) or ((213 + (12716 -8917))>(1517 + 2756))) then v97=v88[v71];v98=v97[827 -(755 + (1784 -(1092 + 621)))];v124=111 -(102 + (962 -(740 + 214)));end if (((1146 -(806 + 339))==v124) or ((5033 -1507)<=(5356 -2676))) then v104=(1536 -(288 + 770)) -(73 + 404);break;end end end end break;end end break;end end end end A,B=v26(v10(v75));if  not A[1] then local v99=0;local v100;while true do if (0==v99) then v100=v34[4][v71] or "?";error("Script error at ["   .. v100   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end end;end end end return v28(v27(),{},v16)();end vv8());end