--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.5b) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then v18=v0(v3(v29,1,1));return "";else local v63=0;local v64;while true do if (v63==0) then v64=v2(v0(v29,16));if v18 then local v77=0;local v78;while true do if (v77==0) then v78=v5(v64,v18);v18=nil;v77=1;end if (v77==1) then return v78;end end else return v64;end break;end end end end);local function v19(v30,v31,v32)if v32 then local v65=(v30/((2 + 0)^(v31-(2 -(1 + 0)))))%((1 + 1)^(((v32-(1 + 0)) -(v31-(1 + 0))) + (2 -1)));return v65-(v65%(1 + 0));else local v66=522 -(209 + 313);local v67;while true do if (v66==0) then v67=2^(v31-(1 -0));return (((v30%(v67 + v67))>=v67) and (1 + 0)) or (1252 -(303 + 949));end end end end local function v20()local v37=v1(v15,v17,v17);v17=v17 + 1;return v37;end local function v21()local v38,v39=v1(v15,v17,v17 + (3 -1));v17=v17 + (2 -0);return (v39 * (122 + 134)) + v38;end local function v22()local v40,v41,v42,v43=v1(v15,v17,v17 + (242 -(185 + 54)));v17=v17 + 1 + 3;return (v43 * ((29026178 + 10033311) -22282273)) + (v42 * (62793 + 2743)) + (v41 * 256) + v40;end local function v23()local v44=v22();local v45=v22();return (( -(5 -3) * v19(v45,32)) + (1297 -(61 + 1235))) * ((1815 -(497 + 1316))^(v19(v45,21,500 -(36 + 433)) -(2406 -(2055 -(489 + 183))))) * ((((v19(v45,1,20) * ((1665 -(1083 + 580))^((660 -(477 + 60)) -91))) + v44)/((1856 -((3001 -1873) + 726))^((3829 -2218) -((1113 -(781 + 169)) + 1396)))) + 1 + 0);end local function v24(v33)local v46;if  not v33 then local v68=0 -0;while true do if (v68==(19 -(7 + 12))) then v33=v22();if (v33==(0 + 0)) then return "";end break;end end end v46=v3(v15,v17,(v17 + v33) -(1 + 0));v17=v17 + v33;local v47={};for v61=1156 -(942 + 213), #v46 do v47[v61]=v2(v1(v3(v46,v61,v61)));end return v6(v47);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v48=0 -0;local v49;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if (v48==(0 + 0)) then v49=1234 -(859 + 375);v50=nil;v48=540 -(404 + 135);end if (v48==(1062 -(622 + 439))) then v51=nil;v52=nil;v48=2 + 0;end if (v48==2) then v53=nil;v54=nil;v48=3;end if (v48==3) then v55=nil;v56=nil;v48=4;end if (v48==4) then while true do if (v49==(11 -8)) then v56=nil;while true do local v79=0 -0;while true do if (v79==1) then if (v50==(0 + 0)) then local v95=0 -0;while true do if (v95~=(0 -0)) then else v51={};v52={};v95=2 -1;end if (v95==(4 -2)) then v50=1;break;end if ((1 + 0)~=v95) then else v53={};v54={v51,v52,nil,v53};v95=2;end end end break;end if ((0 -0)~=v79) then else if ((3 -1)~=v50) then else local v96=588 -(363 + 225);while true do if (v96==1) then for v101=1 -0,v22() do v53[v101]=v22();end return v54;end if (v96~=(0 -0)) then else for v103=1,v22() do local v104=0 + 0;local v105;local v106;local v107;while true do if (v104~=1) then else v107=nil;while true do if (v105~=(0 -0)) then else v106=0 + 0;v107=nil;v105=2 -1;end if (v105==(1 -0)) then while true do if (v106==(107 -(56 + 51))) then v107=v20();if (v19(v107,1,1)==0) then local v130=0;local v131;local v132;local v133;local v134;local v135;while true do if ((48 -(42 + 5))~=v130) then else v133=nil;v134=nil;v130=2;end if (v130==(6 -4)) then v135=nil;while true do if (v131~=2) then else while true do if (v132==0) then v133=v19(v107,4 -2,3);v134=v19(v107,11 -7,5 + 1);v132=445 -(76 + 368);end if (v132==1) then local v178=0;while true do if (v178~=1) then else v132=2;break;end if (v178~=(0 + 0)) then else local v183=0 -0;while true do if (0~=v183) then else v135={v21(),v21(),nil,nil};if (v133==0) then local v186=0;local v187;while true do if (v186~=(0 + 0)) then else v187=0 -0;while true do if (v187==0) then v135[3]=v21();v135[4]=v21();break;end end break;end end elseif (v133==1) then v135[719 -(166 + 550)]=v22();elseif (v133==(3 -1)) then v135[3 + 0]=v22() -((1 + 1)^(1897 -(370 + 1511)));elseif (v133~=3) then else local v192=0 -0;local v193;while true do if (v192~=(684 -(607 + 77))) then else v193=0 + 0;while true do if (v193~=0) then else v135[3]=v22() -(2^(8 + 8));v135[19 -15]=v21();break;end end break;end end end v183=1;end if (v183==1) then v178=1;break;end end end end end if (2==v132) then local v179=0 -0;while true do if (v179~=(1 -0)) then else v132=3;break;end if (v179==(0 + 0)) then if (v19(v134,1,1)==1) then v135[2]=v56[v135[2]];end if (v19(v134,2,2)==1) then v135[8 -5]=v56[v135[3]];end v179=2 -1;end end end if (v132==3) then if (v19(v134,6 -3,4 -1)==1) then v135[1374 -(520 + 850)]=v56[v135[4]];end v51[v103]=v135;break;end end break;end if (v131~=1) then else local v167=0 -0;while true do if (v167==(134 -(98 + 35))) then v131=2;break;end if (v167~=0) then else v134=nil;v135=nil;v167=685 -(186 + 498);end end end if ((0 -0)~=v131) then else local v168=0 + 0;while true do if (v168~=(753 -(349 + 404))) then else v132=1465 -(585 + 880);v133=nil;v168=1;end if (v168==(2 -1)) then v131=1;break;end end end end break;end if (v130~=0) then else v131=0;v132=nil;v130=1 + 0;end end end break;end end break;end end break;end if ((1793 -(697 + 1096))==v104) then v105=0 + 0;v106=nil;v104=1;end end end for v108=812 -(191 + 620),v22() do v52[v108-1]=v27();end v96=1;end end end if (v50==(1413 -(539 + 873))) then local v97=0 + 0;local v98;while true do if (v97==(0 + 0)) then v98=0;while true do if (v98==(0 -0)) then local v110=0 -0;while true do if (v110~=1) then else v98=1 + 0;break;end if (v110==(676 -(455 + 221))) then v55=v22();v56={};v110=1;end end end if (1==v98) then local v111=0;while true do if (v111==0) then for v113=1,v55 do local v114=0 + 0;local v115;local v116;local v117;while true do if (v114==0) then v115=736 -(648 + 88);v116=nil;v114=1;end if (v114==(1 + 0)) then v117=nil;while true do if (v115~=0) then else v116=v20();v117=nil;v115=679 -(220 + 458);end if (v115==1) then if (v116==1) then v117=v20()~=(19 -(14 + 5));elseif (v116==2) then v117=v23();elseif (v116==3) then v117=v24();end v56[v113]=v117;break;end end break;end end end v54[1522 -(657 + 862)]=v20();v111=1 + 0;end if (v111==(1 + 0)) then v98=2;break;end end end if (v98~=(1868 -(243 + 1623))) then else v50=2;break;end end break;end end end v79=3 -2;end end end break;end if (v49==(0 + 0)) then local v75=0;while true do if (v75~=1) then else v49=1;break;end if (v75==0) then v50=0;v51=nil;v75=481 -(102 + 378);end end end if (v49==1) then v52=nil;v53=nil;v49=2;end if (v49==(2 -0)) then local v76=1128 -(87 + 1041);while true do if (v76==(694 -(342 + 352))) then v54=nil;v55=nil;v76=1295 -(875 + 419);end if (v76==(181 -(107 + 73))) then v49=3 + 0;break;end end end end break;end end end local function v28(v34,v35,v36)local v57=0;local v58;local v59;local v60;while true do if (0==v57) then v58=v34[1];v59=v34[2];v57=1;end if (v57==1) then v60=v34[3];return function(...)local v69=0;local v70;local v71;local v72;local v73;local v74;while true do if (v69==0) then v70=1;v71= -1;v69=1;end if (v69==2) then v74=nil;function v74()local v80=v58;local v81=Const;local v82=v59;local v83=v60;local v84=v26;local v85={};local v86={};local v87={};for v92=1021 -(557 + 464),v73 do if ((v92>=v83) or ((989 -(131 + 499))>=(7222 -4650))) then v85[v92-v83]=v72[v92 + (1 -0)];else v87[v92]=v72[v92 + (737 -((1527 -(868 + 466)) + 543))];end end local v88=(v73-v83) + 1 + 0;local v89;local v90;while true do local v93=1215 -(812 + 403);local v94;while true do if (((609 + 226)<(3145 -(242 + 6))) and (v93==(0 -0))) then v94=(0 -0) + 0;while true do if (((4005 -(621 + 1187))==(4074 -(1162 + 715))) and (v94==((0 + 0) -0))) then v89=v80[v70];v90=v89[1926 -(1041 + 312 + 572)];v94=1 -(0 + 0);end if ((v94==(1 + 0)) or (((3801 -(150 + 894)) -(152 + 1342))<(2258 -(972 + 245)))) then if ((v90<=(499 -(273 + 215))) or (1478<(837 -335))) then if (((2617 -(1569 + 320))==(2026 -(372 + 926))) and (v90<=(2 + 3))) then if (((1275 -(208 + 338 + 206))<=(235 + 1577)) and (v90<=(2 + 0))) then if (((732 -331)<(25 + 1837)) and (v90<=(0 -0))) then v87[v89[1 + 1]]();elseif ((v90>(1 + 0)) or ((3833 -(674 + 506))>=((2469 -(1358 + 467)) + 4292))) then local v136=0;local v137;local v138;while true do if ((v136==(1672 -(554 + 1118))) or ((4313 -(9 + 2 + 28))>=4300)) then v137=(0 -0) + 0;v138=nil;v136=2 -1;end if ((361<=(5449 -(167 + 7 + 1535))) and (v136==(81 -(57 + 23)))) then while true do if ((v137==(0 -0)) or ((1414 -(69 + 162))>=(5037 -(672 + (450 -(37 + 57)))))) then v138=v89[1556 -(480 + 1074)];v87[v138]=v87[v138](v12(v87,v138 + 1 + 0,v89[1484 -(1299 + 182)]));break;end end break;end end else v87[v89[363 -((1648 -(118 + 1353)) + 184)]][v89[9 -6]]=v89[(8 -5) + 1];end elseif ((v90<=(107 -(50 + 54))) or ((257 + (5020 -(622 + 85)))<(2165 + (417 -230)))) then local v118=1060 -(796 + 264);local v119;while true do if ((v118==(0 + 0)) or ((1287 -(179 + 710))>=(5697 -(195 + 1687)))) then v119=v89[2 -0];v87[v119]=v87[v119](v87[v119 + (694 -(465 + 228))]);break;end end elseif ((v90>(1001 -(922 + 75))) or ((8185 -6235)<=(2168 -(346 + 613)))) then v87[v89[650 -(338 + 310)]]=v89[2 + 1]~=(0 -0);elseif ((v87[v89[2 + 0]]~=v87[v89[13 -9]]) or ((1216 -441)>(2355 -(398 + 276)))) then v70=v70 + 1 + 0;else v70=v89[12 -9];end elseif ((v90<=(11 -(393 -(351 + 39)))) or ((2550 -(148 + (402 -257)))>=(14491 -10438))) then if ((v90<=(26 -20)) or ((559 + 338)>(1237 -(61 + 9)))) then v87[v89[1919 -(916 + 1001)]]=v87[v89[1702 -(1044 + 655)]];elseif ((v90>(9 -2)) or ((1125 -350)>4767)) then if ((v87[v89[761 -(524 + 235)]]==v89[11 -7]) or ((8180 -4176)<=(1610 -(1054 + 237)))) then v70=v70 + (4 -(3 + 0));else v70=v89[7 -4];end else v87[v89[2 + 0]]=v87[v89[1 + 2 + 0]][v89[761 -(167 + 590)]];end elseif (((3967 -1853)==(4164 -2050)) and (v90<=(36 -(32 -5)))) then local v121=1835 -(1159 + 676);local v122;while true do if ((v121==(1773 -(43 + 1730))) or ((4 + 4398)<((6491 -3336) -(816 + 468)))) then v122=0 + 0;while true do if (((5236 -(523 + 894))==(3906 -(78 + 9))) and (v122==(1566 -(1346 + 220)))) then v87[v89[2 + 0]]=v89[8 -5]~=(0 -0);v70=v70 + 1 + 0;break;end end break;end end elseif ((v90==(1398 -(966 + 422))) or ((1724 -(47 + 363))>2741)) then local v142=0 + (0 -0);local v143;local v144;while true do if ((v142==(1530 -(466 + 1063))) or ((6551 -(1414 + 350))<(2422 -(1550 + 37)))) then while true do if ((v143==(0 + 0)) or ((71 -39)>(1156 -853))) then v144=v89[1059 -(821 + 236)];v87[v144]=v87[v144]();break;end end break;end if ((v142==(0 + 0)) or ((1111 -562)>=(1269 + 3280))) then v143=775 -(50 + 246 + 479);v144=nil;v142=(1 -0) -0;end end else v87[v89[1037 -(379 + 656)]]=v89[211 -(37 + 6 + 165)];end elseif ((v90<=(1011 -((1277 -872) + 589))) or ((1152 + 1834 + 1587)<(5347 -(203 + 1520)))) then if ((v90<=(43 -29)) or ((483 -(312 + 2))>=(579 -322))) then if (((2841 + 594)>=2342) and (v90<=(62 -(46 + 4)))) then local v123=426 -(72 + (556 -202));local v124;while true do if (((7711 -5136)<=(823 + 3345)) and (v123==((1888 -(1385 + 140)) -(150 + 213)))) then v124=v89[1828 -(1531 + 295)];v87[v124](v87[v124 + 1]);break;end end elseif (((3041 -(129 + 424))>(1870 -(234 + (2685 -1711)))) and (v90>(42 -29))) then local v146=1828 -(393 + 1435);local v147;while true do if (((4715 -3587)>=(3717 -2669)) and (v146==((0 -0) -0))) then v147=v89[1 + 1];v87[v147](v12(v87,v147 + (1 -0),v89[1 + 2]));break;end end else local v148=407 -(177 + 230);local v149;local v150;local v151;while true do if (((1 -(0 + 0))==v148) or ((210 + 771)==(717 + 1888 + 1497))) then v151=nil;while true do if ((v149==(49 -(43 + 5 + 1))) or ((837 -(529 + 195))>=(89 + 292))) then local v171=(2289 -793) -(736 + 760);while true do if ((v171==(0 + 0)) or (((11924 -5765) -(325 + 1325))<=(4431 -(3593 -1946)))) then v150=v89[(2711 -(1757 + 72)) -(610 + 270)];v151=v87[v89[3 + 0]];v171=1 + 0;end if (((3567 -(243 + 572))>=(3385 -((2330 -(531 + 1107)) + 840))) and (v171==(1973 -((2393 -(516 + 46)) + 141)))) then v149=1 + 0;break;end end end if ((v149==(598 -(98 + 499))) or ((4850 -(359 + 471))<=3508)) then v87[v150 + (235 -(193 + 41))]=v151;v87[v150]=v151[v89[211 -(20 + 187)]];break;end end break;end if ((v148==0) or ((12978 -9679)<2840)) then v149=0 + 0;v150=nil;v148=1 + 0;end end end elseif ((v90<=(36 -21)) or ((1922 -525)>=(5471 -(241 + 1597)))) then v87[v89[1656 -(471 + 1183)]]={};elseif (((162 + 2525)==(1259 + 1428)) and (v90>(66 -50))) then for v163=v89[2],v89[1548 -(1119 + 426)] do v87[v163]=nil;end else v87[v89[428 -(340 + 86)]]=v28(v82[v89[1156 -(859 + 294)]],nil,v36);end elseif ((v90<=(10 + 10)) or (((3468 -(148 + 790)) + 319)==3183)) then if ((v90<=(707 -(258 + 431))) or ((11865 -8298)<(3524 -(435 + (297 -99))))) then local v126=0 + 0;local v127;local v128;local v129;while true do if ((v126==(1337 -(1055 + 1 + 281))) or ((679 + 637)==(198 + 2054))) then v127=0 + 0;v128=nil;v126=605 -(135 + 469);end if ((v126==(133 -(84 + 48))) or ((1253 + 3207)<(1816 + 739))) then v129=nil;while true do if ((v127==(0 + 0)) or ((140 + 768)>=(215 + 2153))) then local v166=269 -(245 + 24);while true do if (((1472 + 2383)==(15875 -(13143 -(671 + 452)))) and ((1 + 0)==v166)) then v127=1527 -(1143 + 371 + 12);break;end if ((v166==(0 + 0)) or ((1071 + 61)<=(2104 -((1120 -(124 + 157)) + 221)))) then v128=1574 -(652 + 922);v129=nil;v166=(911 -568) -(4 + (785 -447));end end end if ((v127==((1417 -(1033 + 383)) + 0)) or ((672 + 22)>(1435 -518))) then while true do if ((v128==((0 -0) + 0)) or ((3569 -2658)>(12199 -7201))) then v129=v89[1765 -(1174 + 589)];v87[v129]=v87[v129](v12(v87,v129 + (2 -1),v71));break;end end break;end end break;end end elseif ((v90>(1262 -(764 + (1641 -(337 + 825))))) or ((5698 -2572)<2370)) then if ((v89[7 -(4 + 1)]==v87[v89[889 -(174 + 711)]]) or ((3182 + 159)>(19269 -14678))) then v70=v70 + (1664 -(1020 + 643));else v70=v89[7 -4];end else v87[v89[1733 -(372 + 1359)]][v89[968 -(858 + 92 + 15)]]=v87[v89[3 + 1 + 0 + 0]];end elseif (((695 + 2465)>=(3771 -2348)) and (v90<=(89 -67))) then if (((45 + 921)>((1217 -(79 + 976)) + 130)) and (v90>21)) then v70=v89[(1831 -(1359 + 469)) + 0];else v87[v89[(10 -3) -5]]=v36[v89[(18 -13) -2]];end elseif (((4005 -(1243 + (468 -214)))<=4637) and (v90==(1965 -(652 + 1290)))) then do return;end else local v155=1532 -(516 + (3007 -1991));local v156;local v157;local v158;local v159;local v160;while true do if (((1240 + 111)>(3759 -2774)) and (v155==(2 -1))) then v158=nil;v159=nil;v155=1414 -(91 + 1321);end if ((v155==(809 -(582 + 227))) or ((4521 -(813 + 52))<=(418 -(292 -175)))) then v156=0 -0;v157=nil;v155=976 -(703 + 272);end if (((3360 -(566 + 840))<4495) and (v155==((3 -1) + 0))) then v160=nil;while true do if (((788 + 919)==(3585 -(312 + 1566))) and (v156==1)) then v71=(v159 + v157) -(748 -(548 + 199));v160=1420 -(539 + 881);v156=7 -5;end if ((v156==(0 -0)) or ((877 + 1001)>=(13182 -8749))) then local v174=1935 -(882 + 1053);while true do if ((v174==(0 + 0)) or ((6577 -(1014 + 778))<(422 + 1903))) then v157=v89[1 + 1];v158,v159=v84(v87[v157](v12(v87,v157 + (2 -1),v89[(1640 -(1192 + 438)) -7])));v174=1 + 0;end if (((2446 + 363)>=(1929 + 511)) and ((1 + 0)==v174)) then v156=2 -1;break;end end end if (((8330 -5492)<(1253 + 2316)) and ((6 -(10 -6))==v156)) then for v176=v157,v71 do local v177=0 + 0;while true do if (((1082 + 2195)<=(2345 + 1244)) and (v177==(0 -0))) then v160=v160 + (1 -0);v87[v176]=v158[v160];break;end end end break;end end break;end end end v70=v70 + (3 -2);break;end end break;end end end end v69=3;end if (v69==1) then v72={...};v73=v11("#",...) -1;v69=2;end if (v69==3) then A,B=v26(v10(v74));if  not A[1] then local v91=v34[4][v70] or "?";error("Script error at ["   .. v91   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end end end;end end end return v28(v27(),{},v16)();end v14("LOL!",v8());end